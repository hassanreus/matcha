[{"/home/hsf/Desktop/t/client/src/index.js":"1","/home/hsf/Desktop/t/client/src/App.js":"2","/home/hsf/Desktop/t/client/src/start/theme.js":"3","/home/hsf/Desktop/t/client/src/history/history.js":"4","/home/hsf/Desktop/t/client/src/start/init.js":"5","/home/hsf/Desktop/t/client/src/start/SocketContext.js":"6","/home/hsf/Desktop/t/client/src/component/auth/Valid.js":"7","/home/hsf/Desktop/t/client/src/component/auth/Login.js":"8","/home/hsf/Desktop/t/client/src/component/forget/sendForget.js":"9","/home/hsf/Desktop/t/client/src/component/forget/forget.js":"10","/home/hsf/Desktop/t/client/src/component/auth/Sign-in.js":"11","/home/hsf/Desktop/t/client/src/component/layout/res/ResponsiveDrawer.js":"12","/home/hsf/Desktop/t/client/src/start/IntraSvg.js":"13","/home/hsf/Desktop/t/client/src/start/IdContext.js":"14","/home/hsf/Desktop/t/client/src/component/helpers/size.js":"15","/home/hsf/Desktop/t/client/src/component/chat/Chat.js":"16","/home/hsf/Desktop/t/client/src/component/browsing/browsing.js":"17","/home/hsf/Desktop/t/client/src/component/profil/Home.js":"18","/home/hsf/Desktop/t/client/src/component/profil/setting.js":"19","/home/hsf/Desktop/t/client/src/component/profil/editProfill.js":"20","/home/hsf/Desktop/t/client/src/component/history/history.js":"21","/home/hsf/Desktop/t/client/src/component/Notifications/Notifications.js":"22","/home/hsf/Desktop/t/client/src/component/allProfil/likeProfil.js":"23","/home/hsf/Desktop/t/client/src/component/Notifications/MessageNotification.js":"24","/home/hsf/Desktop/t/client/src/component/chat/LeftSection.js":"25","/home/hsf/Desktop/t/client/src/component/chat/ChatBox.js":"26","/home/hsf/Desktop/t/client/src/component/browsing/sort.js":"27","/home/hsf/Desktop/t/client/src/component/browsing/filter.js":"28","/home/hsf/Desktop/t/client/src/component/browsing/map.js":"29","/home/hsf/Desktop/t/client/src/component/browsing/profil.js":"30","/home/hsf/Desktop/t/client/src/component/browsing/search.js":"31","/home/hsf/Desktop/t/client/src/component/browsing/report.js":"32","/home/hsf/Desktop/t/client/src/component/profil/geo.js":"33","/home/hsf/Desktop/t/client/src/component/profil/myAddImages.js":"34","/home/hsf/Desktop/t/client/src/component/profil/profil.js":"35","/home/hsf/Desktop/t/client/src/component/forget/editPassword.js":"36","/home/hsf/Desktop/t/client/src/component/profil/fillProfil.js":"37"},{"size":663,"mtime":1616106004110,"results":"38","hashOfConfig":"39"},{"size":247,"mtime":1616106004102,"results":"40","hashOfConfig":"39"},{"size":141,"mtime":1616106004110,"results":"41","hashOfConfig":"39"},{"size":87,"mtime":1616106004110,"results":"42","hashOfConfig":"39"},{"size":2665,"mtime":1616108424908,"results":"43","hashOfConfig":"39"},{"size":103,"mtime":1616106004110,"results":"44","hashOfConfig":"39"},{"size":954,"mtime":1616106004106,"results":"45","hashOfConfig":"39"},{"size":11042,"mtime":1616110790911,"results":"46","hashOfConfig":"39"},{"size":3225,"mtime":1616106004106,"results":"47","hashOfConfig":"39"},{"size":3362,"mtime":1616106004106,"results":"48","hashOfConfig":"39"},{"size":11661,"mtime":1616106004106,"results":"49","hashOfConfig":"39"},{"size":11193,"mtime":1616111616745,"results":"50","hashOfConfig":"39"},{"size":6687,"mtime":1616106004110,"results":"51","hashOfConfig":"39"},{"size":92,"mtime":1616106004110,"results":"52","hashOfConfig":"39"},{"size":399,"mtime":1616106004106,"results":"53","hashOfConfig":"39"},{"size":3059,"mtime":1616106004106,"results":"54","hashOfConfig":"39"},{"size":9899,"mtime":1616110816304,"results":"55","hashOfConfig":"39"},{"size":4637,"mtime":1616106004110,"results":"56","hashOfConfig":"39"},{"size":147,"mtime":1616106004110,"results":"57","hashOfConfig":"39"},{"size":2532,"mtime":1616106004110,"results":"58","hashOfConfig":"39"},{"size":1427,"mtime":1616106004106,"results":"59","hashOfConfig":"39"},{"size":6657,"mtime":1616106004102,"results":"60","hashOfConfig":"39"},{"size":18614,"mtime":1616110768519,"results":"61","hashOfConfig":"39"},{"size":6300,"mtime":1616106004102,"results":"62","hashOfConfig":"39"},{"size":4662,"mtime":1616108780113,"results":"63","hashOfConfig":"39"},{"size":7772,"mtime":1616110580850,"results":"64","hashOfConfig":"39"},{"size":1221,"mtime":1616106004106,"results":"65","hashOfConfig":"39"},{"size":2646,"mtime":1616106004106,"results":"66","hashOfConfig":"39"},{"size":4446,"mtime":1616106004106,"results":"67","hashOfConfig":"39"},{"size":14792,"mtime":1616106004106,"results":"68","hashOfConfig":"39"},{"size":5885,"mtime":1616106004106,"results":"69","hashOfConfig":"39"},{"size":2629,"mtime":1616110661436,"results":"70","hashOfConfig":"39"},{"size":4548,"mtime":1616106004110,"results":"71","hashOfConfig":"39"},{"size":12560,"mtime":1616106004110,"results":"72","hashOfConfig":"39"},{"size":13469,"mtime":1616106004110,"results":"73","hashOfConfig":"39"},{"size":5220,"mtime":1616106004106,"results":"74","hashOfConfig":"39"},{"size":10575,"mtime":1616106004110,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xrbcw0",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/hsf/Desktop/t/client/src/index.js",[],"/home/hsf/Desktop/t/client/src/App.js",[],"/home/hsf/Desktop/t/client/src/start/theme.js",[],"/home/hsf/Desktop/t/client/src/history/history.js",[],"/home/hsf/Desktop/t/client/src/start/init.js",["156"],"/home/hsf/Desktop/t/client/src/start/SocketContext.js",[],"/home/hsf/Desktop/t/client/src/component/auth/Valid.js",[],["157","158"],"/home/hsf/Desktop/t/client/src/component/auth/Login.js",[],"/home/hsf/Desktop/t/client/src/component/forget/sendForget.js",[],"/home/hsf/Desktop/t/client/src/component/forget/forget.js",[],"/home/hsf/Desktop/t/client/src/component/auth/Sign-in.js",[],"/home/hsf/Desktop/t/client/src/component/layout/res/ResponsiveDrawer.js",["159","160"],"import React from \"react\"\nimport Axios from \"axios\"\nimport { withRouter, Switch, Route } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport \"../../../start/styles.css\"\nimport {\n  Typography,\n  Toolbar,\n  AppBar,\n  CssBaseline,\n  Divider,\n  List,\n  IconButton,\n  Hidden,\n  Drawer,\n  ListItemText,\n  ListItemIcon,\n  ListItem,\n  // Badge\n} from \"@material-ui/core\"\nimport {\n  Menu as MenuIcon,\n  // LocationOn\n} from \"@material-ui/icons\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { FaHome, FaHistory, FaHotjar, FaRegSun,FaUsers } from \"react-icons/fa\"\nimport { RiLogoutCircleLine } from \"react-icons/ri\"\nimport { AiFillMessage } from 'react-icons/ai'\nimport Chat from '../../chat/Chat'\nimport Browsing from '../../browsing/browsing'\nimport Home from \"../../profil/Home\"\nimport EditProfil from \"../../profil/editProfill\"\nimport Setting from \"../../profil/setting\"\nimport History from \"../../history/history\"\nimport AllProfil from \"../../allProfil/likeProfil\"\nimport SocketContext from \"../../../start/SocketContext\";\nimport Notifications from \"../../Notifications/Notifications\";\nimport MessageNotification from \"../../Notifications/MessageNotification\";\nimport IdContext from \"../../../start/IdContext\"\n\nconst instance = Axios.create({ withCredentials: true });\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n  ty: {\n    flexGrow: 1,\n    fontFamily: \"Comfortaa\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst ResponsiveDrawer = (props) => {\n  const { history, window } = props\n  const classes = useStyles()\n  const theme = useTheme()\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [id, setId] = React.useState(0)\n  const [lat, setLat] = React.useState(false)\n  const [long, setLong] = React.useState(false)\n  const [requiredProfilInfo, setRPI] = React.useState('')\n  const [didMount, setDidMount] = React.useState(false)\n  const [err, setErr] = React.useState(false)\n  const socket = React.useContext(SocketContext);\n\n  const [userInf, setUserInf] = React.useState({});\n\n\n  React.useEffect(() => {\n    socket.emit('join', { key: userInf.id });\n  }, [userInf, id])\n\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return true\n  }\n\n  const saveMyInfos = (value) => {\n    if (isEmpty(userInf) === true)\n      setUserInf(value);\n  }\n  console.log('3333333', userInf)\n  React.useEffect(() => {\n    if (id) {\n\n      Axios.post('http://localhost:3001/chat/getConnectedUserInfos', { userId: id })\n        .then((res) => {\n          // if(!MyInfos)\n          if (res) {\n            saveMyInfos(res.data.myInfos);\n          }\n\n        }).catch((err) => { console.log(err) })\n    }\n  }, [id])\n////////////////////////////////////////////////////////////////////////////////////////////////\n  function success(pos) {\n    setErr(false)\n    setLat(pos.coords.latitude)\n    setLong(pos.coords.longitude)\n    if (id1) navigator.geolocation.clearWatch(id1)\n  }\n\n  const options = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 0,\n  }\n\n  let id1 = navigator.geolocation.getCurrentPosition(success, () => {setErr(true)}, options)\n\n  const func = React.useCallback(async () => {\n    if (!didMount){\n      const CancelToken = Axios.CancelToken\n      const source = CancelToken.source()\n        let { data } = await instance.get('http://localhost:3001/base', {\n          cancelToken: source.token,\n        })\n        setId(data.user.id)\n      return () => {\n        if (source) source.cancel('test')\n      }\n    }\n  }, [didMount])\n\n  const func1 = React.useCallback(async () => {\n    console.log(id)\n    if (id !== 0) {\n      console.log(\"TEST\")\n      await instance.post('http://localhost:3001/user/userInfoVerification', { userId: id }).then((res) => {\n        console.log(res.data)\n        if (res.data.status === true) {\n            setRPI(true)\n          } else setRPI(false)\n        }).catch(err => {\n          console.log(err)\n        })\n        console.log(\"TEST222\")\n    }\n  },[id])\n\n  React.useEffect(() => {\n    func()\n    func1()\n    setDidMount(true)\n    return () => {\n      setDidMount(false)\n    }\n  }, [func, func1])\n\n  const getLocIp = React.useCallback(() => {\n    // get locallization with help of ip\n    Axios.post(`/base/checkLoc/${id}`).then(res => {\n      if (res.data.status && err){\n        Axios.get('https://api.ipify.org?format=json').then(async (res) => {\n          await Axios.get(`http://ip-api.com/json/${res.data.ip}`).then((res) => {\n            setLat(res.data.lat)\n            setLong(res.data.lon)\n          })\n          if (id) Axios.post(`base/localisation/${id}`, { lat: lat, long: long })\n        })\n      }\n    })\n  }, [id, lat, long, err])\n\n  React.useEffect(() => {\n    // tal l push\n    if (lat === false && long === false)\n      getLocIp()\n  }, [lat, long, getLocIp])\n\n  React.useEffect(() => {\n    Axios.post(`/base/checkLoc/${id}`).then(res => {\n      if (res.data.status){\n        if (lat !== false && long !== false && id)\n          Axios.post(`base/localisation/${id}`, { lat: lat, long: long })\n      }\n    })\n    \n    setDidMount(true)\n    return () => {\n      setDidMount(false)\n    }\n  }, [id, lat, long])\n\n  const handelLogout = () => {\n    instance.post('http://localhost:3001/logout')\n    if(id)\n      socket.emit('Firedisconnect', {id : id})\n    // socket.close();\n    props.logout()\n  }\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n\n  const itemsListOne = [\n    {\n      id: 0,\n      text: 'Home',\n      icon: <FaHome />,\n      onClick: () => history.push('/'),\n      hidden: true,\n      disabled: requiredProfilInfo,\n    },\n    {\n      id: 1,\n      text: 'browsing',\n      icon: <FaHotjar />,\n      onClick: () => history.push(`/browsing/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 3,\n      text: 'Setting',\n      icon: <FaRegSun />,\n      onClick: () => history.push(`/edit/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 4,\n      text: 'History',\n      icon: <FaHistory />,\n      onClick: () => history.push(`/history/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 5,\n      text: 'Profil',\n      icon: <FaUsers />,\n      onClick: () => history.push('/allProfil'),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 6,\n      text: 'Chat',\n      icon: <AiFillMessage />,\n      onClick: () => history.push('/chat'),\n      disabled: !requiredProfilInfo,\n    },\n  ]\n  const itemsListTwo = [\n    {\n      id: 100,\n      text: 'Logout',\n      icon: <RiLogoutCircleLine />,\n      onClick: () => {\n        handelLogout()\n      },\n    },\n  ]\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListOne.map((item, index) => {\n          const { id, text, icon, onClick, disabled, hidden } = item\n          if (!hidden) {\n            return (\n              <ListItem button key={id} disabled={disabled} onClick={onClick}>\n                <ListItemText key={id + Math.random()} primary={text} />\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\n              </ListItem>\n            )\n          }\n          return <React.Fragment key={Math.random()}></React.Fragment>\n        })}\n      </List>\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListTwo.map((item, index) => {\n          const { id, text, icon, onClick } = item\n          return (\n            <ListItem button key={id} onClick={onClick}>\n              <ListItemText key={id + Math.random()} primary={text} />\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined\n\n  if (!didMount) {\n    return null\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color='secondary'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.ty} variant='h6' noWrap>\n            Matcha\n          </Typography>\n          <MessageNotification myInfos={userInf} />\n          <Notifications myInfos={userInf} />\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='mailbox folders'>\n        <Hidden smUp implementation='css'>\n          <Drawer\n            container={container}\n            variant='temporary'\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <IdContext.Provider value={id}>\n            <Route\n              exact\n              path='/edit/:id'\n              render={(props) => <EditProfil id={id} />}\n            />\n            <Route exact path='/chat' render={(props) => <Chat id={id} />} />\n            <Route\n              exact\n              path='/browsing/:id'\n              render={(props) => <Browsing id={id} />}\n            />\n            <Route exact path='/history/:id' component={History} />\n            <Route\n              exact\n              path='/setting'\n              component={(props) => <Setting id={id} />}\n            />\n            <Route\n              exact\n              path='/allProfil'\n              component={(props) => <AllProfil id={id} />}\n            />\n            {requiredProfilInfo === true ? (\n              <Route exact path='/' render={(props) => <Browsing id={id}  myInfos={userInf} />} />\n            ) : (\n              <Route exact path='/*' render={(props) => <Home id={id} />} />\n            )}\n          </IdContext.Provider>\n        </Switch>\n      </main>\n    </div>\n  )\n};\n\nResponsiveDrawer.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default withRouter(ResponsiveDrawer);\n","/home/hsf/Desktop/t/client/src/start/IntraSvg.js",[],"/home/hsf/Desktop/t/client/src/start/IdContext.js",[],"/home/hsf/Desktop/t/client/src/component/helpers/size.js",[],"/home/hsf/Desktop/t/client/src/component/chat/Chat.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React from \"react\";\nimport Axios from \"axios\";\nimport ChatBox from \"./ChatBox\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List, ListItem, ListItemSecondaryAction, ListItemText, ListItemAvatar, Checkbox, Avatar, Badge, Hidden } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core';\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport FullWidthTabs from \"./LeftSection\";\nimport \"./LeftSectionStyle.css\";\n\n// we have to get id of connected user & email of user to cha with;\n// ids will make the room's name\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst ChatList = (props) => {\n\n  const [people, setPeople] = React.useState([]);\n  const [hisInfos, setHisInfos] = React.useState({});\n  const [myInfos, setMyInfos] = React.useState({});\n  const [stopLoop, xx] = React.useState('');\n\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const saveMyInfos = (value) => {\n    if (isEmpty != false)\n      setMyInfos(value);\n  }\n  const passHisInfos = (x) => {\n    setHisInfos(x);\n  }\n\n  // getting people matched with (id, userName, profilPicture);\n\n  React.useEffect(() => {\n    Axios.post('http://localhost:3001/chat/getConnectedUserInfos', { userId: props.id })\n      .then((res) => {\n        // if(!MyInfos)\n        if (res) {\n          saveMyInfos(res.data.myInfos);\n        }\n\n      }).catch((err) => { console.log(err) })\n\n    Axios.post('http://localhost:3001/chat/people', { userId: props.id })\n      .then((res) => {\n        if (res.data.boards) {\n          var result = res.data.boards\n          console.log('boards', result);\n          console.log('...boards', ...result);\n          setPeople([...result]);\n\n        }\n      }).catch((err) => { console.log(err) })\n    //\n\n  }, [stopLoop])\n\n  // console.log(\"*******\", hisInfos);\n\n  return (\n    <StylesProvider injectFirst>\n      <div>\n        <Grid container spacing={1} style={{ background: '#EEEEEE', height: '70vh' }}>\n          <Grid item md={3}>\n            <FullWidthTabs people={people} passHisInfos={passHisInfos} />\n\n          </Grid>\n          <Grid item md={9}>\n            <ChatBox\n              id={props.id}\n              myInfos={myInfos}\n              hisInfos={hisInfos} id={props.id}\n              people={people} setPeople={setPeople}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </StylesProvider>\n  )\n}\n\nexport default ChatList;","/home/hsf/Desktop/t/client/src/component/browsing/browsing.js",["179","180"],"/home/hsf/Desktop/t/client/src/component/profil/Home.js",[],"/home/hsf/Desktop/t/client/src/component/profil/setting.js",[],"/home/hsf/Desktop/t/client/src/component/profil/editProfill.js",[],"/home/hsf/Desktop/t/client/src/component/history/history.js",[],"/home/hsf/Desktop/t/client/src/component/Notifications/Notifications.js",["181","182","183","184","185","186","187","188","189"],"import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Axios from \"axios\"\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport \"./notifications.css\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport SocketContext from \"../../start/SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    Troot: {\n        '& > *': {\n          margin: theme.spacing(1),\n        },\n      },\n    // bdg : {\n    //     backgroundColor: 'pink'\n    // }\n}));\n\nconst Notifications = (props) => {\n    const classes = useStyles();\n\n    const socket = React.useContext(SocketContext);\n    const [notifNumber, SetNotifNumber] = React.useState(0);\n    const [notifications, setNotifications] = React.useState([]);\n    // const [messageNumber, SetmessageNumber] = React.useState(0);\n\n    function isEmpty(obj) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        SetNotifNumber(0);\n        getUserNotifs(props)\n    };\n\n    const getUserNotifs = (props) => {\n        console.log(props);\n        Axios.post('http://localhost:3001/notifications/getUserNotifs', { userId: props.myInfos.id })\n            .then((res) => {\n                console.log('111111');\n                if (isEmpty(res.data.whoInfos) == false) {\n                    setNotifications(res.data.whoInfos);\n                    console.log('saved notif', res.data.whoInfos);\n                }\n            }).catch((Err) => { console.log('10_1.Err', Err) })\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const snn = (x) => {\n        SetNotifNumber(\" \");\n    }\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // React.useEffect(() => {\n        socket.on('receive_like', (data) => {\n            console.log('|-----=> ', data);\n            if(data.target === props.myInfos.id)\n                snn(notifNumber);\n        })\n        socket.on('receive_visit', (data) => {\n            console.log('|---visit=> ', data);\n            if(data.target === props.myInfos.id)\n                snn(notifNumber);\n        })\n        socket.on('receive_dislike', (data) => {\n            console.log('|---dislike=> ', data.target, props.myInfos.id);\n            if(data.idDisliked === props.myInfos.id)\n                snn(notifNumber);\n        })\n\n    // }, []);\n    console.log('notifications', notifications)\n    return (\n        <StylesProvider injectFirst>\n\n        <div className={classes.Troot}>\n            <Badge className={classes.bdg} badgeContent={notifNumber} aria-describedby={id} color=\"secondary\" onClick={handleClick}>\n                <NotificationsIcon />\n            </Badge>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                {\n                    (notifications.length === 0) ? <Typography>nulllllllllll</Typography>\n                     :       \n                    notifications.map((el) => {\n                        if(el.type != \"message\")\n                        {\n\n                            return(\n                                <List className={classes.root}>\n\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar alt={`${el.userName}image`} src={`http://localhost:3001/${el.image}`} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    el.type == \"like\" ? \"New like\" \n                                    :\n                                    el.type == \"visit\" ? \"New visit\"\n                                    :\n                                    el.type == \"likes back\" ? \"Matched\"\n                                    :\n                                    el.type == \"dislike\" ? \"Unmatched\" : ''\n                                }\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                            >\n                                            {el.userName}\n                                        </Typography>\n                                        {`${el.type }your profile`}\n                                    </React.Fragment>\n                                }\n                                />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n\n                    </List>\n                            )\n                        }\n                            })\n                        }\n                        \n                        </Popover>\n                        {/* <Badge badgeContent={messageNumber} color=\"primary\">\n                        <MailIcon />\n            </Badge> */}\n            {/* <Badge badgeContent={notifNumber} color=\"primary\">\n                <NotificationsIcon />\n            </Badge> */}\n        </div>\n        </StylesProvider>\n    )\n};\n\n\n\n\n\nexport default Notifications;","/home/hsf/Desktop/t/client/src/component/allProfil/likeProfil.js",["190"],"/home/hsf/Desktop/t/client/src/component/Notifications/MessageNotification.js",["191","192","193","194","195","196"],"import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Axios from \"axios\"\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport \"./notifications.css\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport SocketContext from \"../../start/SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    Troot: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    // bdg : {\n    //     backgroundColor: 'pink'\n    // }\n}));\n\nconst MessageNotification = (props) => {\n    const classes = useStyles();\n\n    const socket = React.useContext(SocketContext);\n    const [messageNumber, SetmessageNumber] = React.useState(0);\n    const [msgNotifications, setMsgNotifications] = React.useState([]);\n\n    function isEmpty(obj) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        SetmessageNumber(0);\n        getUserNotifs(props)\n    };\n\n    const getUserNotifs = (props) => {\n        console.log(props);\n        Axios.post('http://localhost:3001/notifications/getUserNotifs', { userId: props.myInfos.id })\n            .then((res) => {\n                console.log('111111');\n                if (isEmpty(res.data.whoInfos) == false) {\n                    setMsgNotifications(res.data.whoInfos);\n                    console.log('saved notif msg', res.data.whoInfos);\n                }\n            }).catch((Err) => { console.log('10_1.Err', Err) })\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const snn = (x) => {\n        SetmessageNumber(\" \");\n    }\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    React.useEffect(() => {\n    socket.on('new_msg', (data) => {\n        console.log('receive_msf|-----=> ', data);\n        if (data.target === props.myInfos.id)\n            snn(messageNumber);\n    })\n    }, []);\n    console.log('msg Notifications', msgNotifications)\n    return (\n        <StylesProvider injectFirst>\n\n            <div className={classes.Troot}>\n                <Badge className={classes.bdg} badgeContent={messageNumber} aria-describedby={id} color=\"secondary\" onClick={handleClick}>\n                <MailIcon />\n                </Badge>\n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    {\n                        (msgNotifications.length === 0) ? <Typography>nulllllllllll</Typography>\n                            :\n                            msgNotifications.map((el) => {\n                                if (el.type == \"message\") {\n\n                                    return (\n                                        <List className={classes.root}>\n\n                                            <ListItem alignItems=\"flex-start\">\n                                                <ListItemAvatar>\n                                                    <Avatar alt={`${el.userName}image`} src={`http://localhost:3001/${el.image}`} />\n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                    primary={el.userName}\n                                                    secondary={\n                                                        <React.Fragment>\n                                                            <Typography\n                                                                component=\"span\"\n                                                                variant=\"body2\"\n                                                                className={classes.inline}\n                                                                color=\"textPrimary\"\n                                                            >\n                                                                {' '}\n                                                            </Typography>\n                                                            {`New message from ${el.userName }`}\n                                                        </React.Fragment>\n                                                    }\n                                                />\n                                            </ListItem>\n                                            <Divider variant=\"inset\" component=\"li\" />\n\n                                        </List>\n                                    )\n                                }\n                            })\n                    }\n\n                </Popover>\n                {/* <Badge badgeContent={messageNumber} color=\"primary\">\n                        <MailIcon />\n            </Badge> */}\n                {/* <Badge badgeContent={notifNumber} color=\"primary\">\n                <NotificationsIcon />\n            </Badge> */}\n            </div>\n        </StylesProvider>\n    )\n};\n\n\n\n\n\nexport default MessageNotification;","/home/hsf/Desktop/t/client/src/component/chat/LeftSection.js",["197","198","199","200","201","202","203"],"/home/hsf/Desktop/t/client/src/component/chat/ChatBox.js",["204","205","206","207","208","209","210"],"/home/hsf/Desktop/t/client/src/component/browsing/sort.js",[],"/home/hsf/Desktop/t/client/src/component/browsing/filter.js",[],"/home/hsf/Desktop/t/client/src/component/browsing/map.js",[],"/home/hsf/Desktop/t/client/src/component/browsing/profil.js",["211","212","213"],"import React from 'react';\nimport Axios from 'axios'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Chip, Avatar, Grid, Button, Dialog, Typography, IconButton, CardMedia } from '@material-ui/core'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport {\n  Close as CloseIcon,\n  More as MoreIcon,\n  Block as BlockIcon,\n} from '@material-ui/icons'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\nimport { Carousel } from 'react-responsive-carousel'\nimport {  FaFemale ,FaMale  } from \"react-icons/fa\"\nimport Rating from \"react-rating\"\nimport Report from './report'\nimport SocketContext from \"../../start/SocketContext\";\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n        marginLeft: '12vw',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: '40vh',\n  },\n  typo: {\n    marginLeft: '1vw',\n    marginTop: '1vw'\n  },\n  typo1: {\n    marginLeft: '1vw',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  grid: {\n    margin: theme.spacing(1),\n  }\n}))\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const socket = React.useContext(SocketContext);\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nconst CustomizedDialogs = (props) => {\n  const socket = React.useContext(SocketContext);\n    const [open, setOpen] = React.useState(false);\n    const [connection, setConnection] = React.useState('');\n    const classes = useStyles()\n\n    const handleClickOpen = (e, visitor, visited) => {\n      setOpen(true);\n      Axios.post(`/browsing/history/${visited}`, {visitor: visitor})\n      // socket visit\n      Axios.post('http://localhost:3001/notifications/saveNotifications', { who: props.visitor, target: props.visited, type: \"visit\" })\n      .then((res) => {\n        console.log('reSdddd000003', res.status);\n      })\n      socket.emit('check_connection', {visitedId : props.visited, visitorId : props.visitor});\n      console.log('who , target', props.visitor, props.visited);\n      socket.emit('new_visit', {who : props.visitor, target : props.visited});\n      \n    };\n    React.useEffect(() => {\n\n      socket.on('receive_connection', (data) => {\n        if(props.visitor == data.visitor)\n        {\n          console.log('//////////', data);\n          setConnection(data.timeAgo)\n        }\n      });\n    }, [connection])\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handelBlock = (e) => {\n      if (props.statusImg)\n        props.setOpen(true)\n      else{\n        Axios.post(`/block/${props.visitor}`, {blocked: props.visited}).then(res => {\n          if (res.data.status){\n            const newList = props.list.filter((item) => item.id !== props.visited)\n            props.setlist(newList)\n          }\n        })\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <div\n          role='button'\n          onClick={(event) =>\n            handleClickOpen(event, props.visitor, props.visited)\n          }\n        >\n          <MoreIcon color='primary' />\n        </div>\n        <Dialog\n          fullWidth\n          maxWidth='sm'\n          onClose={handleClose}\n          aria-labelledby='customized-dialog-title'\n          open={open}\n        >\n          <DialogTitle id='customized-dialog-title' onClose={handleClose}>\n            {props.element.userName}\n          </DialogTitle>\n          <DialogContent>\n            <Grid\n              container\n              justify='center'\n              alignItems='center'\n              direction='column'\n              spacing={2}\n            >\n              <Grid item xs={12} sm={9}>\n                <Carousel autoPlay showThumbs={false}>\n                  {props.element.images.split(',').length > 1\n                    ? props.element.images.split(',').map((el, iKey) => {\n                        let srcImg = `http://localhost:3001/${el}`\n                        let altImg = `display all image loop${iKey}`\n                        return (\n                          <div key={iKey}>\n                            <CardMedia\n                              className={classes.media}\n                              image={srcImg}\n                              title={altImg}\n                            />\n                            <p>{altImg}</p>\n                          </div>\n                        )\n                      })\n                    : ''}\n                </Carousel>\n              </Grid>\n              {connection}\n              <Grid container item xs={8} sm={4}>\n                <props.StyledBadge\n                  overlap='circle'\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  variant='dot'\n                  status={props.status}\n                >\n                  <Avatar\n                    aria-label='recipe'\n                    src={`http://localhost:3001/${\n                      props.element.images.split(',')[0]\n                    }`}\n                    alt={`test${props.element.images.split(',')[0]}`}\n                  />\n                </props.StyledBadge>\n                {props.curTime && (\n                  <Typography\n                    variant='body2'\n                    display='initial'\n                    className={classes.date}\n                  >\n                    Last Seen {moment(props.curTime).fromNow()}\n                  </Typography>\n                )}\n                <Typography className={classes.typo}>\n                  {'  ' +\n                    props.element.firstName +\n                    ' ' +\n                    props.element.lastName +\n                    ', ' +\n                    props.element.age +\n                    ' '}\n                  {props.element.gender === 'Male' && (\n                    <FaMale style={{ color: 'green' }} />\n                  )}\n                  {props.element.gender === 'Women' && (\n                    <FaFemale style={{ color: 'pink' }} />\n                  )}\n                </Typography>\n                <Typography className={classes.typo1} variant='body2'>\n                  {props.element.city +\n                    ' | ' +\n                    props.element.km.toFixed(2) +\n                    '  km'}\n                </Typography>\n              </Grid>\n              <Grid container item xs={8} sm={4}>\n                {props.element.tag2 && props.element.tag2.split(',').length > 0\n                  ? props.element.tag2.split(',').map((el, iKey) => {\n                      return (\n                        <div key={iKey}>\n                          <Chip\n                            color='primary'\n                            variant='outlined'\n                            size='small'\n                            label={el}\n                          />\n                        </div>\n                      )\n                    })\n                  : ''}\n                <Grid container className={classes.grid}>\n                  <Typography>\n                    tag in common :\n                  </Typography>\n                </Grid>\n                {props.element.tag1 && props.element.tag1.split(',').length > 0\n                  ? props.element.tag1.split(',').map((el, iKey) => {\n                      return (\n                        <div key={iKey}>\n                          <Chip\n                            color='secondary'\n                            variant='outlined'\n                            size='small'\n                            label={el}\n                          />\n                        </div>\n                      )\n                    })\n                    :  <Typography color='secondary' variant='caption'>\n                        {'Nothing to in common'}\n                      </Typography>}\n              </Grid>\n              <Grid item xs={8} sm={4}>\n                <Typography color='primary' variant='caption'>\n                  {props.element.bio}\n                </Typography>\n              </Grid>\n              <Grid item xs={8} sm={4}>\n                {0 < props.element.fameRating && props.element.fameRating < 50 && (\n                  <Typography style={{ color: 'Gold' }} variant='caption'>\n                    <Rating\n                      style={{ pointerEvents: 'none' }}\n                      initialRating={1}\n                    />\n                    <br />\n                    {props.element.fameRating + ' exp Useless'}\n                  </Typography>\n                )}\n                {50 < props.element.fameRating &&\n                  props.element.fameRating < 150 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={1}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Useless+'}\n                    </Typography>\n                  )}\n                {150 < props.element.fameRating &&\n                  props.element.fameRating < 250 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={2}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Poor'}\n                    </Typography>\n                  )}\n                {250 < props.element.fameRating &&\n                  props.element.fameRating < 350 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={2}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Poor+'}\n                    </Typography>\n                  )}\n                {350 < props.element.fameRating &&\n                  props.element.fameRating < 450 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={3}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Ok'}\n                    </Typography>\n                  )}\n                {450 < props.element.fameRating &&\n                  props.element.fameRating < 550 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={3}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Ok+'}\n                    </Typography>\n                  )}\n                {550 < props.element.fameRating &&\n                  props.element.fameRating < 650 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={4}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Good'}\n                    </Typography>\n                  )}\n                {650 < props.element.fameRating &&\n                  props.element.fameRating < 750 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={4}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Good+'}\n                    </Typography>\n                  )}\n                {750 < props.element.fameRating &&\n                  props.element.fameRating < 850 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={5}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Excellent'}\n                    </Typography>\n                  )}\n                {850 < props.element.fameRating &&\n                  props.element.fameRating < 1001 && (\n                    <Typography style={{ color: 'Gold' }} variant='caption'>\n                      <Rating\n                        style={{ pointerEvents: 'none' }}\n                        initialRating={5}\n                      />\n                      <br />\n                      {props.element.fameRating + ' exp Excellent+'}\n                    </Typography>\n                  )}\n              </Grid>\n              <Grid container item xs={8} sm={4} direction='row'>\n                <IconButton\n                  aria-label='Block User'\n                  onClick={(event) => handelBlock(event)}\n                >\n                  <BlockIcon />\n                </IconButton>\n                <Report visitor={props.visitor} visited={props.visited} statusImg={props.statusImg} setOpen={props.setOpen} />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color='primary'>\n              Done\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n}\n\nexport default CustomizedDialogs","/home/hsf/Desktop/t/client/src/component/browsing/search.js",[],"/home/hsf/Desktop/t/client/src/component/browsing/report.js",[],"/home/hsf/Desktop/t/client/src/component/profil/geo.js",[],"/home/hsf/Desktop/t/client/src/component/profil/myAddImages.js",[],"/home/hsf/Desktop/t/client/src/component/profil/profil.js",[],"/home/hsf/Desktop/t/client/src/component/forget/editPassword.js",[],"/home/hsf/Desktop/t/client/src/component/profil/fillProfil.js",[],{"ruleId":"214","severity":1,"message":"215","line":56,"column":9,"nodeType":"216","messageId":"217","endLine":56,"endColumn":14},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":101,"column":6,"nodeType":"224","endLine":101,"endColumn":19,"suggestions":"225"},{"ruleId":"222","severity":1,"message":"226","line":130,"column":6,"nodeType":"224","endLine":130,"endColumn":10,"suggestions":"227"},{"ruleId":"214","severity":1,"message":"228","line":4,"column":16,"nodeType":"216","messageId":"217","endLine":4,"endColumn":20},{"ruleId":"214","severity":1,"message":"229","line":4,"column":22,"nodeType":"216","messageId":"217","endLine":4,"endColumn":25},{"ruleId":"214","severity":1,"message":"230","line":4,"column":27,"nodeType":"216","messageId":"217","endLine":4,"endColumn":33},{"ruleId":"214","severity":1,"message":"231","line":4,"column":35,"nodeType":"216","messageId":"217","endLine":4,"endColumn":40},{"ruleId":"214","severity":1,"message":"232","line":4,"column":42,"nodeType":"216","messageId":"217","endLine":4,"endColumn":46},{"ruleId":"214","severity":1,"message":"233","line":4,"column":48,"nodeType":"216","messageId":"217","endLine":4,"endColumn":56},{"ruleId":"214","severity":1,"message":"234","line":4,"column":58,"nodeType":"216","messageId":"217","endLine":4,"endColumn":81},{"ruleId":"214","severity":1,"message":"235","line":4,"column":83,"nodeType":"216","messageId":"217","endLine":4,"endColumn":95},{"ruleId":"214","severity":1,"message":"236","line":4,"column":97,"nodeType":"216","messageId":"217","endLine":4,"endColumn":111},{"ruleId":"214","severity":1,"message":"237","line":4,"column":113,"nodeType":"216","messageId":"217","endLine":4,"endColumn":121},{"ruleId":"214","severity":1,"message":"238","line":4,"column":123,"nodeType":"216","messageId":"217","endLine":4,"endColumn":129},{"ruleId":"214","severity":1,"message":"239","line":4,"column":138,"nodeType":"216","messageId":"217","endLine":4,"endColumn":144},{"ruleId":"214","severity":1,"message":"240","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":20},{"ruleId":"214","severity":1,"message":"241","line":13,"column":7,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":47,"column":20,"nodeType":"216","messageId":"217","endLine":47,"endColumn":22},{"ruleId":"243","severity":1,"message":"244","line":60,"column":17,"nodeType":"245","messageId":"246","endLine":60,"endColumn":19},{"ruleId":"222","severity":1,"message":"247","line":91,"column":6,"nodeType":"224","endLine":91,"endColumn":16,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":107,"column":35,"nodeType":"251","endLine":107,"endColumn":48},{"ruleId":"243","severity":1,"message":"252","line":148,"column":33,"nodeType":"245","messageId":"246","endLine":148,"endColumn":35},{"ruleId":"243","severity":1,"message":"252","line":154,"column":37,"nodeType":"245","messageId":"246","endLine":154,"endColumn":39},{"ruleId":"214","severity":1,"message":"253","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":16},{"ruleId":"214","severity":1,"message":"254","line":17,"column":22,"nodeType":"216","messageId":"217","endLine":17,"endColumn":32},{"ruleId":"243","severity":1,"message":"252","line":71,"column":48,"nodeType":"245","messageId":"246","endLine":71,"endColumn":50},{"ruleId":"255","severity":1,"message":"256","line":132,"column":44,"nodeType":"257","messageId":"258","endLine":132,"endColumn":46},{"ruleId":"243","severity":1,"message":"244","line":133,"column":36,"nodeType":"245","messageId":"246","endLine":133,"endColumn":38},{"ruleId":"243","severity":1,"message":"252","line":145,"column":45,"nodeType":"245","messageId":"246","endLine":145,"endColumn":47},{"ruleId":"243","severity":1,"message":"252","line":147,"column":45,"nodeType":"245","messageId":"246","endLine":147,"endColumn":47},{"ruleId":"243","severity":1,"message":"252","line":149,"column":45,"nodeType":"245","messageId":"246","endLine":149,"endColumn":47},{"ruleId":"243","severity":1,"message":"252","line":151,"column":45,"nodeType":"245","messageId":"246","endLine":151,"endColumn":47},{"ruleId":"243","severity":1,"message":"252","line":126,"column":29,"nodeType":"245","messageId":"246","endLine":126,"endColumn":31},{"ruleId":"214","severity":1,"message":"259","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":25},{"ruleId":"214","severity":1,"message":"254","line":17,"column":22,"nodeType":"216","messageId":"217","endLine":17,"endColumn":32},{"ruleId":"243","severity":1,"message":"252","line":71,"column":48,"nodeType":"245","messageId":"246","endLine":71,"endColumn":50},{"ruleId":"222","severity":1,"message":"260","line":95,"column":8,"nodeType":"224","endLine":95,"endColumn":10,"suggestions":"261"},{"ruleId":"255","severity":1,"message":"256","line":121,"column":55,"nodeType":"257","messageId":"258","endLine":121,"endColumn":57},{"ruleId":"243","severity":1,"message":"252","line":122,"column":45,"nodeType":"245","messageId":"246","endLine":122,"endColumn":47},{"ruleId":"214","severity":1,"message":"262","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"214","severity":1,"message":"263","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"231","line":7,"column":35,"nodeType":"216","messageId":"217","endLine":7,"endColumn":40},{"ruleId":"214","severity":1,"message":"234","line":7,"column":58,"nodeType":"216","messageId":"217","endLine":7,"endColumn":81},{"ruleId":"214","severity":1,"message":"237","line":7,"column":113,"nodeType":"216","messageId":"217","endLine":7,"endColumn":121},{"ruleId":"214","severity":1,"message":"239","line":7,"column":138,"nodeType":"216","messageId":"217","endLine":7,"endColumn":144},{"ruleId":"255","severity":1,"message":"256","line":126,"column":63,"nodeType":"257","messageId":"258","endLine":126,"endColumn":65},{"ruleId":"214","severity":1,"message":"264","line":8,"column":13,"nodeType":"216","messageId":"217","endLine":8,"endColumn":23},{"ruleId":"214","severity":1,"message":"265","line":65,"column":10,"nodeType":"216","messageId":"217","endLine":65,"endColumn":14},{"ruleId":"214","severity":1,"message":"266","line":65,"column":16,"nodeType":"216","messageId":"217","endLine":65,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":78,"column":40,"nodeType":"245","messageId":"246","endLine":78,"endColumn":42},{"ruleId":"222","severity":1,"message":"223","line":147,"column":6,"nodeType":"224","endLine":147,"endColumn":8,"suggestions":"267"},{"ruleId":"243","severity":1,"message":"244","line":221,"column":34,"nodeType":"245","messageId":"246","endLine":221,"endColumn":36},{"ruleId":"243","severity":1,"message":"252","line":223,"column":37,"nodeType":"245","messageId":"246","endLine":223,"endColumn":39},{"ruleId":"214","severity":1,"message":"268","line":60,"column":9,"nodeType":"216","messageId":"217","endLine":60,"endColumn":15},{"ruleId":"243","severity":1,"message":"252","line":109,"column":26,"nodeType":"245","messageId":"246","endLine":109,"endColumn":28},{"ruleId":"222","severity":1,"message":"269","line":115,"column":8,"nodeType":"224","endLine":115,"endColumn":20,"suggestions":"270"},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["271"],"no-negated-in-lhs",["272"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["273"],"React Hook React.useEffect has a missing dependency: 'saveMyInfos'. Either include it or remove the dependency array.",["274"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Checkbox' is defined but never used.","'Avatar' is defined but never used.","'Hidden' is defined but never used.","'makeStyles' is defined but never used.","'StyledBadge' is assigned a value but never used.","'xx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'props.id' and 'saveMyInfos'. Either include them or remove the dependency array.",["275"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '===' and instead saw '=='.","'MailIcon' is defined but never used.","'withStyles' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'NotificationsIcon' is defined but never used.","React Hook React.useEffect has missing dependencies: 'messageNumber', 'props.myInfos.id', and 'socket'. Either include them or remove the dependency array.",["276"],"'StylesProvider' is defined but never used.","'Grid' is defined but never used.","'UpdateIcon' is defined but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.",["277"],"'socket' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.visitor' and 'socket'. Either include them or remove the dependency array.",["278"],"no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [userInf, id, socket]",{"range":"291","text":"292"},"Update the dependencies array to be: [id, saveMyInfos]",{"range":"293","text":"294"},"Update the dependencies array to be: [props.id, saveMyInfos, stopLoop]",{"range":"295","text":"296"},"Update the dependencies array to be: [messageNumber, props.myInfos.id, socket]",{"range":"297","text":"298"},"Update the dependencies array to be: [socket]",{"range":"299","text":"300"},"Update the dependencies array to be: [connection, props.visitor, socket]",{"range":"301","text":"302"},[2670,2683],"[userInf, id, socket]",[3282,3286],"[id, saveMyInfos]",[2416,2426],"[props.id, saveMyInfos, stopLoop]",[2868,2870],"[messageNumber, props.myInfos.id, socket]",[3655,3657],"[socket]",[3544,3556],"[connection, props.visitor, socket]"]