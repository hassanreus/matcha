[{"/Users/hseffian/Desktop/matcha/client/src/index.js":"1","/Users/hseffian/Desktop/matcha/client/src/App.js":"2","/Users/hseffian/Desktop/matcha/client/src/history/history.js":"3","/Users/hseffian/Desktop/matcha/client/src/start/theme.js":"4","/Users/hseffian/Desktop/matcha/client/src/start/init.js":"5","/Users/hseffian/Desktop/matcha/client/src/start/SocketContext.js":"6","/Users/hseffian/Desktop/matcha/client/src/component/auth/Valid.js":"7","/Users/hseffian/Desktop/matcha/client/src/component/auth/Sign-in.js":"8","/Users/hseffian/Desktop/matcha/client/src/component/forget/sendForget.js":"9","/Users/hseffian/Desktop/matcha/client/src/component/auth/Login.js":"10","/Users/hseffian/Desktop/matcha/client/src/component/forget/forget.js":"11","/Users/hseffian/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js":"12","/Users/hseffian/Desktop/matcha/client/src/component/profil/Home.js":"13","/Users/hseffian/Desktop/matcha/client/src/start/IntraSvg.js":"14","/Users/hseffian/Desktop/matcha/client/src/component/profil/editProfill.js":"15","/Users/hseffian/Desktop/matcha/client/src/component/allProfil/likeProfil.js":"16","/Users/hseffian/Desktop/matcha/client/src/component/helpers/size.js":"17","/Users/hseffian/Desktop/matcha/client/src/component/browsing/browsing.js":"18","/Users/hseffian/Desktop/matcha/client/src/component/profil/setting.js":"19","/Users/hseffian/Desktop/matcha/client/src/component/history/history.js":"20","/Users/hseffian/Desktop/matcha/client/src/component/profil/geo.js":"21","/Users/hseffian/Desktop/matcha/client/src/component/forget/editPassword.js":"22","/Users/hseffian/Desktop/matcha/client/src/component/browsing/report.js":"23","/Users/hseffian/Desktop/matcha/client/src/component/browsing/profil.js":"24","/Users/hseffian/Desktop/matcha/client/src/component/browsing/map.js":"25","/Users/hseffian/Desktop/matcha/client/src/component/browsing/search.js":"26","/Users/hseffian/Desktop/matcha/client/src/component/browsing/filter.js":"27","/Users/hseffian/Desktop/matcha/client/src/component/browsing/sort.js":"28","/Users/hseffian/Desktop/matcha/client/src/component/profil/fillProfil.js":"29","/Users/hseffian/Desktop/matcha/client/src/component/profil/myAddImages.js":"30","/Users/hseffian/Desktop/matcha/client/src/component/chat/Chat.js":"31","/Users/hseffian/Desktop/matcha/client/src/component/chat/ChatBox.js":"32","/Users/hseffian/Desktop/matcha/client/src/component/profil/alertDialog.js":"33"},{"size":663,"mtime":1615383974000,"results":"34","hashOfConfig":"35"},{"size":248,"mtime":1615383974000,"results":"36","hashOfConfig":"35"},{"size":87,"mtime":1615383974000,"results":"37","hashOfConfig":"35"},{"size":141,"mtime":1615383974000,"results":"38","hashOfConfig":"35"},{"size":2401,"mtime":1615383974000,"results":"39","hashOfConfig":"35"},{"size":103,"mtime":1615383974000,"results":"40","hashOfConfig":"35"},{"size":954,"mtime":1615383974000,"results":"41","hashOfConfig":"35"},{"size":11661,"mtime":1615383974000,"results":"42","hashOfConfig":"35"},{"size":3257,"mtime":1615383974000,"results":"43","hashOfConfig":"35"},{"size":11000,"mtime":1615383974000,"results":"44","hashOfConfig":"35"},{"size":3362,"mtime":1615383974000,"results":"45","hashOfConfig":"35"},{"size":10904,"mtime":1615394003000,"results":"46","hashOfConfig":"35"},{"size":5367,"mtime":1615388035000,"results":"47","hashOfConfig":"35"},{"size":6687,"mtime":1615383974000,"results":"48","hashOfConfig":"35"},{"size":14972,"mtime":1615383974000,"results":"49","hashOfConfig":"35"},{"size":15025,"mtime":1615383974000,"results":"50","hashOfConfig":"35"},{"size":399,"mtime":1615383974000,"results":"51","hashOfConfig":"35"},{"size":9175,"mtime":1615390966000,"results":"52","hashOfConfig":"35"},{"size":147,"mtime":1615383974000,"results":"53","hashOfConfig":"35"},{"size":1466,"mtime":1615383974000,"results":"54","hashOfConfig":"35"},{"size":3938,"mtime":1615383974000,"results":"55","hashOfConfig":"35"},{"size":4664,"mtime":1615383974000,"results":"56","hashOfConfig":"35"},{"size":2534,"mtime":1615383974000,"results":"57","hashOfConfig":"35"},{"size":12739,"mtime":1615383974000,"results":"58","hashOfConfig":"35"},{"size":3986,"mtime":1615383974000,"results":"59","hashOfConfig":"35"},{"size":6038,"mtime":1615383974000,"results":"60","hashOfConfig":"35"},{"size":2646,"mtime":1615383974000,"results":"61","hashOfConfig":"35"},{"size":1193,"mtime":1615383974000,"results":"62","hashOfConfig":"35"},{"size":12007,"mtime":1615383974000,"results":"63","hashOfConfig":"35"},{"size":11121,"mtime":1615401068000,"results":"64","hashOfConfig":"35"},{"size":3818,"mtime":1615383974000,"results":"65","hashOfConfig":"35"},{"size":2370,"mtime":1615383974000,"results":"66","hashOfConfig":"35"},{"size":1265,"mtime":1615391777000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1qgjrei",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hseffian/Desktop/matcha/client/src/index.js",[],["138","139"],"/Users/hseffian/Desktop/matcha/client/src/App.js",[],"/Users/hseffian/Desktop/matcha/client/src/history/history.js",[],"/Users/hseffian/Desktop/matcha/client/src/start/theme.js",[],"/Users/hseffian/Desktop/matcha/client/src/start/init.js",[],"/Users/hseffian/Desktop/matcha/client/src/start/SocketContext.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/auth/Valid.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/auth/Sign-in.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/forget/sendForget.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/auth/Login.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/forget/forget.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/Home.js",["140","141","142"],"import React  from \"react\"\nimport Axios from 'axios'\nimport { CircularProgress, Stepper, Step, StepLabel, Button, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport FillProfil from './fillProfil'\nimport MyAddImages from './myAddImages'\nimport history from '../../history/history'\n\n\n\n// const triggerInput = (index) => {\n//   // console.log(printImages.split(',').length <= index)\n//   // if (printImages.split(',').length <= index) {\n//   //   console.log(\"test\")\n//   // }\n//   if (imageRefs.current[index]) {\n//     imageRefs.current[index].click()\n//   }\n// }\n\n\n\n{/* (printImages.split(',').length > index) || (imageRefs.current[index].id) ? <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} /> */ }\n{/* <IoMdAddCircle className={classes.addCircle} /> */}\n{/* {printImages.split(',').length <= index ? <IoMdAddCircle className={classes.addCircle} /> : <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} />} */ }\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Add Images\", \"Fill Profile Informations\"];\n}\n\nfunction getStepContent(step, props, checkTI, checkNo) {\n  switch (step) {\n    case 0:\n      return (\n        <MyAddImages id={props.id} checkTotalImg={checkTI} />\n      )\n    case 1:\n      return (\n        <FillProfil id={props.id} checkTotalImg={checkTI} checkFill={checkNo} />\n      )\n    default:\n      return 'Unknown step'\n  }\n}\n\nconst HorizontalLinearStepper = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [stepOneFilled, setStepOneFilled] = React.useState('no')\n  // const [activeSkip, setActiveSkip] = React.useState(false)\n  const [progress, setprogress] = React.useState(false)\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleReset = (e, id) => {\n    Axios.post(`/base/dltImg/${id}`).then((res) => {\n      if (res.data.status) setActiveStep(0)\n    })\n  };\n\n  const handleDone = (e, id) => {\n    Axios.post(`/base/status/${id}`)\n    history.push(`/edit/${id}`)\n  }\n\n  const checkTotalImg = () => {\n    setStepOneFilled('yes');\n  }\n\n  const fillProfil = () => {\n    setStepOneFilled('no')\n  }\n\n  // const skipBtnSkip = () => {\n  //   setActiveSkip(true)\n  // }\n\n  const reloadFunc = React.useCallback(() => {\n    if (activeStep === 0 && props.id) {\n      // IF YOU WANT TO DELETE IMAGES OF USERS IN FIRST EVENT\n      // Axios.post(`/base/onlyImg/${props.id}`)\n      \n    }\n  }, [activeStep, props])\n\n  React.useEffect(() => {\n    reloadFunc()\n    setStepOneFilled('no')\n  }, [reloadFunc])\n\n  // check if data is already filled\n\n  const funProgress = React.useCallback(async () => {\n    if (props.id){\n      await Axios.post(`/base/check1/${props.id}`)\n      setprogress(true)\n    }else\n      setprogress(false)\n  }, [props])\n\n  React.useEffect(() => {\n    funProgress()\n  }, [funProgress, progress])\n\n  return (\n    \n  <div className={classes.root}>\n    {progress === false ? <CircularProgress disableShrink /> : \n      <React.Fragment>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            return (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            )\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button\n                onClick={(event) => handleReset(event, props.id)}\n                className={classes.button}\n              >\n                Reset\n              </Button>\n              <Button\n                onClick={(event) => handleDone(event, props.id)}\n                className={classes.button}\n                color='primary'\n              >\n                Done\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                {getStepContent(\n                  activeStep,\n                  props,\n                  checkTotalImg,\n                  fillProfil\n                  // skipBtnSkip\n                )}\n              </Typography>\n              <div>\n                \n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={handleNext}\n                  className={classes.button}\n                  disabled={stepOneFilled === 'no' ? true : false}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    }\n    </div>\n  )\n}\n\nexport default HorizontalLinearStepper","/Users/hseffian/Desktop/matcha/client/src/start/IntraSvg.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/editProfill.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/allProfil/likeProfil.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/helpers/size.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/browsing.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/setting.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/history/history.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/geo.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/forget/editPassword.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/report.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/profil.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/map.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/search.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/filter.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/browsing/sort.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/fillProfil.js",[],"/Users/hseffian/Desktop/matcha/client/src/component/profil/myAddImages.js",["143","144","145","146","147"],"/Users/hseffian/Desktop/matcha/client/src/component/chat/Chat.js",["148"],"import React from \"react\";\nimport Axios from \"axios\";\nimport ChatBox from \"./ChatBox\";\nimport { Grid, List ,ListItem ,ListItemText ,ListItemAvatar,Avatar, Badge } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core';\n// we have to get id of connected user & email of user to cha with;\n// ids will make the room's name\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"',\n      },\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1,\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0,\n      },\n    },\n  }))(Badge);\n\nconst ChatList = (props) => {\n\n    const [people, setPeople] = React.useState([]);\n    const [hisInfos, setHisInfos] = React.useState({});\n    const [myInfos, setMyInfos] = React.useState({})\n\n    const saveMyInfos = (value) => {\n      if(!myInfos)\n      {\n        setMyInfos(value);\n      }\n    }\n\n    // getting people matched with (id, userName, profilPicture);\n\n    React.useEffect(() => {\n      Axios.post('http://localhost:3001/chat/getConnectedUserInfos', {userId: props.id})\n      .then((res) => {\n          if(res)\n            saveMyInfos(res.data.myInfos);\n        \n      }).catch((err) => {console.log(err)})\n\n      Axios.post('http://localhost:3001/chat/people', {userId : props.id})\n      .then((res) => {\n          if(res.data.boards)\n          {\n              var result = res.data.boards\n              setPeople([...result]);\n          }\n      }).catch((err) => {console.log(err)})\n\n    }, [myInfos])\n\n    const passHisInfos = (x) => {\n        setHisInfos(x);\n    }\n    \n    return (\n      <div>\n        <Grid container spacing={1} style={{background: '#EEEEEE', height: '70vh'}}>\n          <Grid item md={2}>\n              <h4>People</h4>\n              <h4>Messages</h4>\n              <hr />\n              <List>\n              {\n                people.map((item, index) => {\n                    const {userName, id, image} = item;\n                    const labelId = `checkbox-list-secondary-label-${index}`;\n                    return (\n                      <ListItem key={index} onClick={(e) => {passHisInfos({userName:userName, id:id, image:image})}}>\n                          <ListItemAvatar>\n                          <StyledBadge                      \n                          overlap=\"circle\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          variant=\"dot\">\n                              <Avatar\n                                  alt={`${userName} picture`}\n                                  src={`http://localhost:3001/${image}`}\n                              />\n                              </StyledBadge>\n                          </ListItemAvatar>\n                          <ListItemText id={labelId} primary={userName} />\n                      </ListItem>   \n                    );\n                })\n              }\n              </List>\n          </Grid>\n          <Grid item md={8} style={{border: '0.5px white solid'}}>\n            <ChatBox\n              id={props.id}  \n              myInfos={myInfos} \n              hisInfos={hisInfos}\n            />\n          </Grid>\n          <Grid item md={2}>\n            <h3>Profile & Utilitie</h3>\n          </Grid>\n        </Grid>\n      </div>\n    )\n}\n\nexport default ChatList;","/Users/hseffian/Desktop/matcha/client/src/component/chat/ChatBox.js",["149"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input } from '@material-ui/core/';\nimport SocketContext from \"../../start/SocketContext\";\n\nconst useStyles = makeStyles(() => ({\n    chatBox: {\n        height: '100%',\n        backgroundColor: '#EEEEEE',\n        position: \"relative\",\n    },\n    textInput: {\n        position: \"absolute\",\n        bottom: 0,\n            color: 'purple',\n            width: '100%',\n        }\n        \n    }));\n    \n    const ChatBox = (props) => {\n        const classes = useStyles();\n        \n        const socket = React.useContext(SocketContext);\n        React.useEffect(() => {\n            // socket.emit('newConnection');\n            if(props.id)\n            {\n                socket.emit('join', {id: props.id});\n            }\n            socket.on('new_msg', (data) => {\n                var messages = document.getElementById('messages');\n                var span = document.createElement('span');\n                span.innerHTML = data.msg+'</br>';\n                messages.appendChild(span);\n            })\n        }, [])\n\n        const sendMessage = (e) => {\n            e.preventDefault();\n            if(props.hisInfos)\n            {\n                var input = document.getElementById('msg');\n                if(e.keyCode === 13)\n                {\n                    socket.emit('msg', {text:input.value, to: props.hisInfos.id});\n                    var messages = document.getElementById('messages');\n                    var span = document.createElement('span');\n                    span.innerHTML = 'you : ' + input.value + '</br>';\n                    messages.appendChild(span);\n                    input.value = '';\n                }\n            }else {\n                console.log('cant find hisInfos')\n            }\n        }\n\n        if(props.hisInfos.id){\n            return(\n                <div className={classes.chatBox}>\n                <div id=\"messages\">\n                </div>\n                <Input id=\"msg\" type=\"text\"  className={classes.textInput} placeholder=\"Message Goes Here\" onKeyUp={sendMessage} />\n                </div>\n            )\n        } else {\n            return(\n                <div className={classes.chatBox}>\n                <p>select the user you want to chat with</p>\n                </div>\n            )\n        }\n}\n\nexport default ChatBox;","/Users/hseffian/Desktop/matcha/client/src/component/profil/alertDialog.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":23,"column":1,"nodeType":"156","messageId":"157","endLine":23,"endColumn":194},{"ruleId":"154","severity":1,"message":"155","line":24,"column":1,"nodeType":"156","messageId":"157","endLine":24,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":25,"column":1,"nodeType":"156","messageId":"157","endLine":25,"endColumn":212},{"ruleId":"158","severity":1,"message":"159","line":8,"column":25,"nodeType":"160","messageId":"161","endLine":8,"endColumn":49},{"ruleId":"158","severity":1,"message":"162","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":120,"column":34,"nodeType":"165","messageId":"166","endLine":120,"endColumn":36},{"ruleId":"167","severity":1,"message":"168","line":137,"column":6,"nodeType":"169","endLine":137,"endColumn":19,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"164","line":246,"column":56,"nodeType":"165","messageId":"166","endLine":246,"endColumn":58},{"ruleId":"167","severity":1,"message":"171","line":70,"column":8,"nodeType":"169","endLine":70,"endColumn":17,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"173","line":37,"column":12,"nodeType":"169","endLine":37,"endColumn":14,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'IoIosRemoveCircleOutline' is defined but never used.","Identifier","unusedVar","'AlertDialoge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'Items' and 'effect'. Either include them or remove the dependency array. You can also do a functional update 'triggerEffect(e => ...)' if you only need 'effect' in the 'triggerEffect' call.","ArrayExpression",["177"],"React Hook React.useEffect has missing dependencies: 'props.id' and 'saveMyInfos'. Either include them or remove the dependency array.",["178"],"React Hook React.useEffect has missing dependencies: 'props.id' and 'socket'. Either include them or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [Items, effect, printImages]",{"range":"186","text":"187"},"Update the dependencies array to be: [myInfos, props.id, saveMyInfos]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.id, socket]",{"range":"190","text":"191"},[3255,3268],"[Items, effect, printImages]",[1923,1932],"[myInfos, props.id, saveMyInfos]",[1098,1100],"[props.id, socket]"]